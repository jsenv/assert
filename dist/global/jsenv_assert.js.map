{
  "version": 3,
  "file": "jsenv_assert.js",
  "sources": [
    "../../node_modules/@jsenv/core/helpers/babel/typeof/typeof.js",
    "../../node_modules/@jsenv/core/helpers/babel/arrayLikeToArray/arrayLikeToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/unsupportedIterableToArray/unsupportedIterableToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/createForOfIteratorHelper/createForOfIteratorHelper.js",
    "../../node_modules/@jsenv/core/helpers/babel/defineProperty/defineProperty.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectSpread2/objectSpread2.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectWithoutPropertiesLoose/objectWithoutPropertiesLoose.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectWithoutProperties/objectWithoutProperties.js",
    "../../src/internal/isComposite.js",
    "../../src/internal/findPreviousComparison.js",
    "../../src/internal/object-subtype.js",
    "../../src/internal/compare.js",
    "../../node_modules/@jsenv/inspect/src/internal/valueToType.js",
    "../../node_modules/@jsenv/inspect/src/internal/boolean.js",
    "../../node_modules/@jsenv/inspect/src/internal/null.js",
    "../../node_modules/@jsenv/core/helpers/babel/arrayWithHoles/arrayWithHoles.js",
    "../../node_modules/@jsenv/core/helpers/babel/iterableToArrayLimit/iterableToArrayLimit.js",
    "../../node_modules/@jsenv/core/helpers/babel/nonIterableRest/nonIterableRest.js",
    "../../node_modules/@jsenv/core/helpers/babel/slicedToArray/slicedToArray.js",
    "../../node_modules/@jsenv/inspect/src/internal/number.js",
    "../../node_modules/@jsenv/inspect/src/internal/string.js",
    "../../node_modules/@jsenv/inspect/src/internal/symbol.js",
    "../../node_modules/@jsenv/inspect/src/internal/undefined.js",
    "../../node_modules/@jsenv/inspect/src/internal/bigint.js",
    "../../node_modules/@jsenv/inspect/src/internal/primitiveMap.js",
    "../../node_modules/@jsenv/inspect/src/internal/util.js",
    "../../node_modules/@jsenv/inspect/src/internal/constructor.js",
    "../../node_modules/@jsenv/inspect/src/internal/array.js",
    "../../node_modules/@jsenv/inspect/src/internal/bigint-object.js",
    "../../node_modules/@jsenv/inspect/src/internal/boolean-object.js",
    "../../node_modules/@jsenv/inspect/src/internal/error.js",
    "../../node_modules/@jsenv/inspect/src/internal/date.js",
    "../../node_modules/@jsenv/inspect/src/internal/function.js",
    "../../node_modules/@jsenv/inspect/src/internal/number-object.js",
    "../../node_modules/@jsenv/inspect/src/internal/object.js",
    "../../node_modules/@jsenv/inspect/src/internal/regexp.js",
    "../../node_modules/@jsenv/inspect/src/internal/string-object.js",
    "../../node_modules/@jsenv/inspect/src/internal/compositeMap.js",
    "../../node_modules/@jsenv/inspect/src/inspect.js",
    "../../src/internal/symbolToWellKnownSymbol.js",
    "../../src/internal/propertyNameToDotNotationAllowed.js",
    "../../src/internal/propertyToAccessorString.js",
    "../../src/internal/comparisonToPath.js",
    "../../node_modules/@jsenv/core/helpers/babel/arrayWithoutHoles/arrayWithoutHoles.js",
    "../../node_modules/@jsenv/core/helpers/babel/iterableToArray/iterableToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/nonIterableSpread/nonIterableSpread.js",
    "../../node_modules/@jsenv/core/helpers/babel/toConsumableArray/toConsumableArray.js",
    "../../src/internal/wellKnownValue.js",
    "../../src/internal/valueToString.js",
    "../../src/internal/toErrorMessage/anyComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/defaultComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/referenceComparisonToErrorMessage.js",
    "../../src/internal/comparisonToRootComparison.js",
    "../../src/internal/findSelfOrAncestorComparison.js",
    "../../src/internal/toErrorMessage/prototypeComparisonToErrorMessage.js",
    "../../node_modules/@jsenv/logger/src/createDetailedMessage.js",
    "../../src/internal/toErrorMessage/propertiesComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/propertiesOrderComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/symbolsComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/symbolsOrderComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/setSizeComparisonToMessage.js",
    "../../src/internal/toErrorMessage/mapEntryComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/notComparisonToErrorMessage.js",
    "../../src/internal/toErrorMessage/arrayLengthComparisonToMessage.js",
    "../../src/internal/toErrorMessage/comparisonToErrorMessage.js",
    "../../src/assertionError.js",
    "../../src/assert.js"
  ],
  "sourcesContent": [
    "const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n",
    "/* eslint-disable no-eq-null, eqeqeq */\nexport default function arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length\n  var arr2 = new Array(len)\n  for (var i = 0; i < len; i++) arr2[i] = arr[i]\n  return arr2\n}\n",
    "/* eslint-disable consistent-return */\nimport arrayLikeToArray from \"../arrayLikeToArray/arrayLikeToArray.js\"\n\nexport default function unsupportedIterableToArray(o, minLen) {\n  if (!o) return\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen)\n  var n = Object.prototype.toString.call(o).slice(8, -1)\n  if (n === \"Object\" && o.constructor) n = o.constructor.name\n  if (n === \"Map\" || n === \"Set\") return Array.from(o)\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return arrayLikeToArray(o, minLen)\n}\n",
    "/* eslint-disable eqeqeq, no-eq-null */\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\n\n// s: start (create the iterator)\n// n: next\n// e: error (called whenever something throws)\n// f: finish (always called at the end)\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = (typeof Symbol !== \"undefined\" && o[Symbol.iterator]) || o[\"@@iterator\"]\n  if (!it) {\n    // Fallback for engines without symbol support\n    if (\n      Array.isArray(o) ||\n      (it = unsupportedIterableToArray(o)) ||\n      (allowArrayLike && o && typeof o.length === \"number\")\n    ) {\n      if (it) o = it\n      var i = 0\n      var F = function () {}\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return { done: true }\n          return { done: false, value: o[i++] }\n        },\n        e: function (e) {\n          throw e\n        },\n        f: F,\n      }\n    }\n    throw new TypeError(\n      \"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n    )\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err\n  return {\n    s: function () {\n      it = it.call(o)\n    },\n    n: function () {\n      var step = it.next()\n      normalCompletion = step.done\n      return step\n    },\n    e: function (e) {\n      didErr = true\n      err = e\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return()\n      } finally {\n        if (didErr) throw err\n      }\n    },\n  }\n}\n",
    "export default (obj, key, value) => {\n  // Shortcircuit the slow defineProperty path when possible.\n  // We are trying to avoid issues where setters defined on the\n  // prototype cause side effects under the fast path of simple\n  // assignment. By checking for existence of the property with\n  // the in operator, we can optimize most of this overhead away.\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    })\n  } else {\n    obj[key] = value\n  }\n  return obj\n}\n",
    "import defineProperty from \"../defineProperty/defineProperty.js\"\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object)\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object)\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable\n      })\n    }\n    keys.push.apply(keys, symbols)\n  }\n  return keys\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {}\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key])\n      })\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\n      })\n    }\n  }\n  return target\n}\n",
    "export default (source, excluded) => {\n  if (source === null) return {}\n  var target = {}\n  var sourceKeys = Object.keys(source)\n  var key\n  var i\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i]\n    if (excluded.indexOf(key) >= 0) continue\n    target[key] = source[key]\n  }\n  return target\n}\n",
    "import objectWithoutPropertiesLoose from \"../objectWithoutPropertiesLoose/objectWithoutPropertiesLoose.js\"\n\nexport default (source, excluded) => {\n  if (source === null) return {}\n\n  var target = objectWithoutPropertiesLoose(source, excluded)\n  var key\n  var i\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source)\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i]\n      if (excluded.indexOf(key) >= 0) continue\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue\n      target[key] = source[key]\n    }\n  }\n  return target\n}\n",
    "export const isComposite = (value) => {\n  if (value === null) return false\n  if (typeof value === \"object\") return true\n  if (typeof value === \"function\") return true\n  return false\n}\n\nexport const isPrimitive = (value) => !isComposite(value)\n",
    "/* eslint-disable no-use-before-define */\n// https://github.com/dmail/dom/blob/e55a8c7b4cda6be2f7a4b1222f96d028a379b67f/src/visit.js#L89\n\nexport const findPreviousComparison = (comparison, predicate) => {\n  const createPreviousIterator = () => {\n    let current = comparison\n    const next = () => {\n      const previous = getPrevious(current)\n      current = previous\n      return {\n        done: !previous,\n        value: previous,\n      }\n    }\n    return {\n      next,\n    }\n  }\n\n  const iterator = createPreviousIterator()\n  let next = iterator.next()\n  while (!next.done) {\n    const value = next.value\n    if (predicate(value)) {\n      return value\n    }\n    next = iterator.next()\n  }\n  return null\n}\n\nconst getLastChild = (comparison) => {\n  return comparison.children[comparison.children.length - 1]\n}\n\nconst getDeepestChild = (comparison) => {\n  let deepest = getLastChild(comparison)\n  while (deepest) {\n    const lastChild = getLastChild(deepest)\n    if (lastChild) {\n      deepest = lastChild\n    } else {\n      break\n    }\n  }\n  return deepest\n}\n\nconst getPreviousSibling = (comparison) => {\n  const { parent } = comparison\n  if (!parent) return null\n  const { children } = parent\n  const index = children.indexOf(comparison)\n  if (index === 0) return null\n  return children[index - 1]\n}\n\nconst getPrevious = (comparison) => {\n  const previousSibling = getPreviousSibling(comparison)\n  if (previousSibling) {\n    const deepestChild = getDeepestChild(previousSibling)\n\n    if (deepestChild) {\n      return deepestChild\n    }\n    return previousSibling\n  }\n  const parent = comparison.parent\n  return parent\n}\n",
    "export const isRegExp = (value) =>\n  somePrototypeMatch(value, ({ constructor }) => constructor && constructor.name === \"RegExp\")\n\nexport const isArray = (value) =>\n  somePrototypeMatch(value, ({ constructor }) => constructor && constructor.name === \"Array\")\n\nexport const isError = (value) =>\n  somePrototypeMatch(value, ({ constructor }) => constructor && constructor.name === \"Error\")\n\nexport const isSet = (value) =>\n  somePrototypeMatch(value, ({ constructor }) => constructor && constructor.name === \"Set\")\n\nexport const isMap = (value) =>\n  somePrototypeMatch(value, ({ constructor }) => constructor && constructor.name === \"Map\")\n\nexport const somePrototypeMatch = (value, predicate) => {\n  let prototype = Object.getPrototypeOf(value)\n  while (prototype) {\n    if (predicate(prototype)) return true\n    prototype = Object.getPrototypeOf(prototype)\n  }\n  return false\n}\n",
    "import { isPrimitive } from \"./isComposite.js\"\nimport { findPreviousComparison } from \"./findPreviousComparison.js\"\nimport { isSet, isMap, isRegExp, isError, isArray, somePrototypeMatch } from \"./object-subtype.js\"\n\nexport const compare = ({ actual, expected }, { anyOrder }) => {\n  const comparison = createComparison({\n    type: \"root\",\n    actual,\n    expected,\n  })\n  comparison.failed = !defaultComparer(comparison, { anyOrder })\n  return comparison\n}\n\nconst expectationSymbol = Symbol.for(\"expectation\")\n\nconst createExpectation = (data) => {\n  return {\n    [expectationSymbol]: true,\n    data,\n  }\n}\n\nexport const createNotExpectation = (value) => {\n  return createExpectation({\n    type: \"not\",\n    expected: value,\n    comparer: ({ actual }) => {\n      if (isNegativeZero(value)) {\n        return !isNegativeZero(actual)\n      }\n      if (isNegativeZero(actual)) {\n        return !isNegativeZero(value)\n      }\n      return actual !== value\n    },\n  })\n}\n\nexport const createAnyExpectation = (expectedConstructor) => {\n  return createExpectation({\n    type: \"any\",\n    expected: expectedConstructor,\n    comparer: ({ actual }) => {\n      return somePrototypeMatch(\n        actual,\n        ({ constructor }) =>\n          constructor &&\n          (constructor === expectedConstructor || constructor.name === expectedConstructor.name),\n      )\n    },\n  })\n}\n\nconst createComparison = ({ parent = null, children = [], ...rest }) => {\n  const comparison = {\n    parent,\n    children,\n    ...rest,\n  }\n  return comparison\n}\n\nconst defaultComparer = (comparison, options) => {\n  const { actual, expected } = comparison\n\n  if (typeof expected === \"object\" && expected !== null && expectationSymbol in expected) {\n    subcompare(comparison, {\n      ...expected.data,\n      actual,\n      options,\n    })\n    return !comparison.failed\n  }\n\n  if (isPrimitive(expected) || isPrimitive(actual)) {\n    compareIdentity(comparison, options)\n    return !comparison.failed\n  }\n\n  const expectedReference = findPreviousComparison(\n    comparison,\n    (referenceComparisonCandidate) =>\n      referenceComparisonCandidate !== comparison &&\n      referenceComparisonCandidate.expected === comparison.expected,\n  )\n  if (expectedReference) {\n    if (expectedReference.actual === comparison.actual) {\n      subcompare(comparison, {\n        type: \"reference\",\n        actual: expectedReference,\n        expected: expectedReference,\n        comparer: () => true,\n        options,\n      })\n      return true\n    }\n    subcompare(comparison, {\n      type: \"reference\",\n      actual: findPreviousComparison(\n        comparison,\n        (referenceComparisonCandidate) =>\n          referenceComparisonCandidate !== comparison &&\n          referenceComparisonCandidate.actual === comparison.actual,\n      ),\n      expected: expectedReference,\n      comparer: ({ actual, expected }) => actual === expected,\n      options,\n    })\n    if (comparison.failed) return false\n    // if we expectedAReference and it did not fail, we are done\n    // this expectation was already compared and comparing it again\n    // would cause infinite loop\n    return true\n  }\n\n  const actualReference = findPreviousComparison(\n    comparison,\n    (referenceComparisonCandidate) =>\n      referenceComparisonCandidate !== comparison &&\n      referenceComparisonCandidate.actual === comparison.actual,\n  )\n  if (actualReference) {\n    subcompare(comparison, {\n      type: \"reference\",\n      actual: actualReference,\n      expected: null,\n      comparer: () => false,\n      options,\n    })\n    return false\n  }\n\n  compareIdentity(comparison, options)\n  // actual === expected, no need to compare prototype, properties, ...\n  if (!comparison.failed) return true\n  comparison.failed = false\n\n  comparePrototype(comparison, options)\n  if (comparison.failed) return false\n\n  compareIntegrity(comparison, options)\n  if (comparison.failed) return false\n\n  compareExtensibility(comparison, options)\n  if (comparison.failed) return false\n\n  comparePropertiesDescriptors(comparison, options)\n  if (comparison.failed) return false\n\n  compareProperties(comparison, options)\n  if (comparison.failed) return false\n\n  compareSymbolsDescriptors(comparison, options)\n  if (comparison.failed) return false\n\n  compareSymbols(comparison, options)\n  if (comparison.failed) return false\n\n  if (typeof Set === \"function\" && isSet(expected)) {\n    compareSetEntries(comparison, options)\n    if (comparison.failed) return false\n  }\n\n  if (typeof Map === \"function\" && isMap(expected)) {\n    compareMapEntries(comparison, options)\n    if (comparison.failed) return false\n  }\n\n  if (\"valueOf\" in expected && typeof expected.valueOf === \"function\") {\n    // always keep this one after properties because we must first ensure\n    // valueOf is on both actual and expected\n    // usefull because new Date(10).valueOf() === 10\n    // or new Boolean(true).valueOf() === true\n    compareValueOfReturnValue(comparison, options)\n    if (comparison.failed) return false\n  }\n\n  // required otherwise assert({ actual: /a/, expected: /b/ }) would not throw\n  if (isRegExp(expected)) {\n    compareToStringReturnValue(comparison, options)\n    if (comparison.failed) return false\n  }\n\n  return true\n}\n\nconst subcompare = (\n  comparison,\n  { type, data, actual, expected, comparer = defaultComparer, options },\n) => {\n  const subcomparison = createComparison({ type, data, actual, expected, parent: comparison })\n  comparison.children.push(subcomparison)\n  subcomparison.failed = !comparer(subcomparison, options)\n  comparison.failed = subcomparison.failed\n  return subcomparison\n}\n\nconst compareIdentity = (comparison, options) => {\n  const { actual, expected } = comparison\n  subcompare(comparison, {\n    type: \"identity\",\n    actual,\n    expected,\n    comparer: () => {\n      if (isNegativeZero(expected)) {\n        return isNegativeZero(actual)\n      }\n      if (isNegativeZero(actual)) {\n        return isNegativeZero(expected)\n      }\n      return actual === expected\n    },\n    options,\n  })\n}\n\n// under some rare and odd circumstances firefox Object.is(-0, -0)\n// returns false making test fail.\n// it is 100% reproductible with big.test.js.\n// However putting debugger or executing Object.is just before the\n// comparison prevent Object.is failure.\n// It makes me thing there is something strange inside firefox internals.\n// All this to say avoid relying on Object.is to test if the value is -0\nconst isNegativeZero = (value) => {\n  return typeof value === \"number\" && 1 / value === -Infinity\n}\n\nconst comparePrototype = (comparison, options) => {\n  subcompare(comparison, {\n    type: \"prototype\",\n    actual: Object.getPrototypeOf(comparison.actual),\n    expected: Object.getPrototypeOf(comparison.expected),\n    options,\n  })\n}\n\nconst compareExtensibility = (comparison, options) => {\n  subcompare(comparison, {\n    type: \"extensibility\",\n    actual: Object.isExtensible(comparison.actual) ? \"extensible\" : \"non-extensible\",\n    expected: Object.isExtensible(comparison.expected) ? \"extensible\" : \"non-extensible\",\n    comparer: ({ actual, expected }) => actual === expected,\n    options,\n  })\n}\n\n// https://tc39.github.io/ecma262/#sec-setintegritylevel\nconst compareIntegrity = (comparison, options) => {\n  subcompare(comparison, {\n    type: \"integrity\",\n    actual: getIntegriy(comparison.actual),\n    expected: getIntegriy(comparison.expected),\n    comparer: ({ actual, expected }) => actual === expected,\n    options,\n  })\n}\n\nconst getIntegriy = (value) => {\n  if (Object.isFrozen(value)) return \"frozen\"\n  if (Object.isSealed(value)) return \"sealed\"\n  return \"none\"\n}\n\nconst compareProperties = (comparison, options) => {\n  const { actual, expected } = comparison\n\n  const expectedPropertyNames = Object.getOwnPropertyNames(expected)\n  const actualPropertyNames = Object.getOwnPropertyNames(actual)\n  const actualMissing = expectedPropertyNames.filter(\n    (name) => actualPropertyNames.indexOf(name) === -1,\n  )\n  const actualExtra = actualPropertyNames.filter(\n    (name) => expectedPropertyNames.indexOf(name) === -1,\n  )\n  const expectedMissing = []\n  const expectedExtra = []\n\n  subcompare(comparison, {\n    type: \"properties\",\n    actual: { missing: actualMissing, extra: actualExtra },\n    expected: { missing: expectedMissing, extra: expectedExtra },\n    comparer: () => actualMissing.length === 0 && actualExtra.length === 0,\n    options,\n  })\n  if (comparison.failed) return\n\n  if (!options.anyOrder) {\n    const expectedKeys = Object.keys(expected)\n    const actualKeys = Object.keys(actual)\n    subcompare(comparison, {\n      type: \"properties-order\",\n      actual: actualKeys,\n      expected: expectedKeys,\n      comparer: () => expectedKeys.every((name, index) => name === actualKeys[index]),\n      options,\n    })\n  }\n}\n\nconst compareSymbols = (comparison, options) => {\n  const { actual, expected } = comparison\n\n  const expectedSymbols = Object.getOwnPropertySymbols(expected)\n  const actualSymbols = Object.getOwnPropertySymbols(actual)\n  const actualMissing = expectedSymbols.filter((symbol) => actualSymbols.indexOf(symbol) === -1)\n  const actualExtra = actualSymbols.filter((symbol) => expectedSymbols.indexOf(symbol) === -1)\n  const expectedMissing = []\n  const expectedExtra = []\n\n  subcompare(comparison, {\n    type: \"symbols\",\n    actual: { missing: actualMissing, extra: actualExtra },\n    expected: { missing: expectedMissing, extra: expectedExtra },\n    comparer: () => actualMissing.length === 0 && actualExtra.length === 0,\n    options,\n  })\n  if (comparison.failed) return\n\n  if (!options.anyOrder) {\n    subcompare(comparison, {\n      type: \"symbols-order\",\n      actual: actualSymbols,\n      expected: expectedSymbols,\n      comparer: () => expectedSymbols.every((symbol, index) => symbol === actualSymbols[index]),\n      options,\n    })\n  }\n}\n\nconst comparePropertiesDescriptors = (comparison, options) => {\n  const { expected } = comparison\n  const expectedPropertyNames = Object.getOwnPropertyNames(expected)\n  // eslint-disable-next-line no-unused-vars\n  for (const expectedPropertyName of expectedPropertyNames) {\n    comparePropertyDescriptor(comparison, expectedPropertyName, expected, options)\n    if (comparison.failed) break\n  }\n}\n\nconst compareSymbolsDescriptors = (comparison, options) => {\n  const { expected } = comparison\n  const expectedSymbols = Object.getOwnPropertySymbols(expected)\n  // eslint-disable-next-line no-unused-vars\n  for (const expectedSymbol of expectedSymbols) {\n    comparePropertyDescriptor(comparison, expectedSymbol, expected, options)\n    if (comparison.failed) break\n  }\n}\n\nconst comparePropertyDescriptor = (comparison, property, owner, options) => {\n  const { actual, expected } = comparison\n\n  const expectedDescriptor = Object.getOwnPropertyDescriptor(expected, property)\n  const actualDescriptor = Object.getOwnPropertyDescriptor(actual, property)\n  if (!actualDescriptor) return\n\n  const configurableComparison = subcompare(comparison, {\n    type: \"property-configurable\",\n    data: property,\n    actual: actualDescriptor.configurable ? \"configurable\" : \"non-configurable\",\n    expected: expectedDescriptor.configurable ? \"configurable\" : \"non-configurable\",\n    comparer: ({ actual, expected }) => actual === expected,\n    options,\n  })\n  if (configurableComparison.failed) return\n\n  const enumerableComparison = subcompare(comparison, {\n    type: \"property-enumerable\",\n    data: property,\n    actual: actualDescriptor.enumerable ? \"enumerable\" : \"non-enumerable\",\n    expected: expectedDescriptor.enumerable ? \"enumerable\" : \"non-enumerable\",\n    comparer: ({ actual, expected }) => actual === expected,\n    options,\n  })\n  if (enumerableComparison.failed) return\n\n  const writableComparison = subcompare(comparison, {\n    type: \"property-writable\",\n    data: property,\n    actual: actualDescriptor.writable ? \"writable\" : \"non-writable\",\n    expected: expectedDescriptor.writable ? \"writable\" : \"non-writable\",\n    comparer: ({ actual, expected }) => actual === expected,\n    options,\n  })\n  if (writableComparison.failed) return\n\n  if (isError(owner) && isErrorPropertyIgnored(property)) {\n    return\n  }\n\n  if (typeof owner === \"function\") {\n    if (owner.name === \"RegExp\" && isRegExpPropertyIgnored(property)) {\n      return\n    }\n    if (isFunctionPropertyIgnored(property)) {\n      return\n    }\n  }\n\n  const getComparison = subcompare(comparison, {\n    type: \"property-get\",\n    data: property,\n    actual: actualDescriptor.get,\n    expected: expectedDescriptor.get,\n    options,\n  })\n  if (getComparison.failed) return\n\n  const setComparison = subcompare(comparison, {\n    type: \"property-set\",\n    data: property,\n    actual: actualDescriptor.set,\n    expected: expectedDescriptor.set,\n    options,\n  })\n  if (setComparison.failed) return\n\n  const valueComparison = subcompare(comparison, {\n    type: \"property-value\",\n    data: isArray(expected) ? propertyToArrayIndex(property) : property,\n    actual: actualDescriptor.value,\n    expected: expectedDescriptor.value,\n    options,\n  })\n  if (valueComparison.failed) return\n}\n\nconst isRegExpPropertyIgnored = (name) => RegExpIgnoredProperties.includes(name)\n\nconst isFunctionPropertyIgnored = (name) => functionIgnoredProperties.includes(name)\n\nconst isErrorPropertyIgnored = (name) => errorIgnoredProperties.includes(name)\n\n// some regexp properties fails the comparison but that's expected\n// to my experience it happens only in webkit.\n// check https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/RegExp/input\n// to see why these properties exists and would fail between each regex instance\nconst RegExpIgnoredProperties = [\n  \"input\",\n  \"$_\",\n  \"lastMatch\",\n  \"$&\",\n  \"lastParen\",\n  \"$+\",\n  \"leftContext\",\n  \"$`\",\n  \"rightContext\",\n  \"$'\",\n]\n\nconst functionIgnoredProperties = [\n  // function caller would fail comparison but that's expected\n  \"caller\",\n  // function arguments would fail comparison but that's expected\n  \"arguments\",\n]\n\nconst errorIgnoredProperties = [\n  // stack fails comparison but it's not important\n  \"stack\",\n  // firefox properties that would fail comparison but that's expected\n  \"file\",\n  \"fileName\",\n  \"lineNumber\",\n  \"columnNumber\",\n  // webkit properties that would fail comparison but that's expected\n  \"line\",\n  \"column\",\n]\n\nconst propertyToArrayIndex = (property) => {\n  if (typeof property !== \"string\") return property\n  const propertyAsNumber = parseInt(property, 10)\n  if (Number.isInteger(propertyAsNumber) && propertyAsNumber >= 0) {\n    return propertyAsNumber\n  }\n  return property\n}\n\nconst compareSetEntries = (comparison, options) => {\n  const { actual, expected } = comparison\n\n  const expectedEntries = Array.from(expected.values()).map((value, index) => {\n    return { index, value }\n  })\n  const actualEntries = Array.from(actual.values()).map((value, index) => {\n    return { index, value }\n  })\n\n  // first check actual entries match expected entries\n  // eslint-disable-next-line no-unused-vars\n  for (const actualEntry of actualEntries) {\n    const expectedEntry = expectedEntries[actualEntry.index]\n    if (expectedEntry) {\n      const entryComparison = subcompare(comparison, {\n        type: \"set-entry\",\n        data: actualEntry.index,\n        actual: actualEntry.value,\n        expected: expectedEntry.value,\n        options,\n      })\n      if (entryComparison.failed) return\n    }\n  }\n\n  const actualSize = actual.size\n  const expectedSize = expected.size\n  const sizeComparison = subcompare(comparison, {\n    type: \"set-size\",\n    actual: actualSize,\n    expected: expectedSize,\n    comparer: () => actualSize === expectedSize,\n    options,\n  })\n  if (sizeComparison.failed) return\n}\n\nconst compareMapEntries = (comparison, options) => {\n  const { actual, expected } = comparison\n\n  const actualEntries = Array.from(actual.keys()).map((key) => {\n    return { key, value: actual.get(key) }\n  })\n  const expectedEntries = Array.from(expected.keys()).map((key) => {\n    return { key, value: expected.get(key) }\n  })\n\n  const entryMapping = []\n  const expectedEntryCandidates = expectedEntries.slice()\n\n  actualEntries.forEach((actualEntry) => {\n    const expectedEntry = expectedEntryCandidates.find((expectedEntryCandidate) => {\n      const mappingComparison = subcompare(comparison, {\n        type: \"map-entry-key-mapping\",\n        actual: actualEntry.key,\n        expected: expectedEntryCandidate.key,\n        options,\n      })\n      if (mappingComparison.failed) {\n        comparison.failed = false\n        return false\n      }\n      return true\n    })\n    if (expectedEntry)\n      expectedEntryCandidates.splice(expectedEntryCandidates.indexOf(expectedEntry), 1)\n    entryMapping.push({ actualEntry, expectedEntry })\n  })\n\n  // should we ensure entries are defined in the same order ?\n  // I'm not sure about that, but maybe.\n  // in that case, just like for properties order\n  // this is the last thing we would check\n  // because it gives less information\n\n  // first check all actual entry macthes expected entry\n  let index = 0\n  // eslint-disable-next-line no-unused-vars\n  for (const actualEntry of actualEntries) {\n    const actualEntryMapping = entryMapping.find((mapping) => mapping.actualEntry === actualEntry)\n    if (actualEntryMapping && actualEntryMapping.expectedEntry) {\n      const mapEntryComparison = subcompare(comparison, {\n        type: \"map-entry\",\n        data: index,\n        actual: actualEntry,\n        expected: actualEntryMapping.expectedEntry,\n        options,\n      })\n      if (mapEntryComparison.failed) return\n    }\n    index++\n  }\n\n  // second check there is no unexpected entry\n  const mappingWithoutExpectedEntry = entryMapping.find(\n    (mapping) => mapping.expectedEntry === undefined,\n  )\n  const unexpectedEntry = mappingWithoutExpectedEntry\n    ? mappingWithoutExpectedEntry.actualEntry\n    : null\n  const unexpectedEntryComparison = subcompare(comparison, {\n    type: \"map-entry\",\n    actual: unexpectedEntry,\n    expected: null,\n    options,\n  })\n  if (unexpectedEntryComparison.failed) return\n\n  // third check there is no missing entry (expected but not found)\n  const expectedEntryWithoutActualEntry = expectedEntries.find((expectedEntry) =>\n    entryMapping.every((mapping) => mapping.expectedEntry !== expectedEntry),\n  )\n  const missingEntry = expectedEntryWithoutActualEntry || null\n  const missingEntryComparison = subcompare(comparison, {\n    type: \"map-entry\",\n    actual: null,\n    expected: missingEntry,\n    options,\n  })\n  if (missingEntryComparison.failed) return\n}\n\nconst compareValueOfReturnValue = (comparison, options) => {\n  subcompare(comparison, {\n    type: \"value-of-return-value\",\n    actual: comparison.actual.valueOf(),\n    expected: comparison.expected.valueOf(),\n    options,\n  })\n}\n\nconst compareToStringReturnValue = (comparison, options) => {\n  subcompare(comparison, {\n    type: \"to-string-return-value\",\n    actual: comparison.actual.toString(),\n    expected: comparison.expected.toString(),\n    options,\n  })\n}\n",
    "export const valueToType = (value) => {\n  const primitiveType = valueToPrimitiveType(value)\n  if (primitiveType === \"function\") {\n    return { compositeType: \"Function\" }\n  }\n\n  if (primitiveType === \"object\") {\n    const compositeType = valueToCompositeType(value)\n    return { compositeType }\n  }\n\n  return { primitiveType }\n}\n\nconst { toString } = Object.prototype\n\nconst valueToCompositeType = (object) => {\n  if (typeof object === \"object\" && Object.getPrototypeOf(object) === null) {\n    return \"Object\"\n  }\n\n  const toStringResult = toString.call(object)\n  // returns format is '[object ${tagName}]';\n  // and we want ${tagName}\n  const tagName = toStringResult.slice(\"[object \".length, -1)\n  if (tagName === \"Object\") {\n    const objectConstructorName = object.constructor.name\n    if (objectConstructorName !== \"Object\") {\n      return objectConstructorName\n    }\n  }\n\n  return tagName\n}\n\nconst valueToPrimitiveType = (value) => {\n  if (value === null) {\n    return \"null\"\n  }\n\n  if (value === undefined) {\n    return \"undefined\"\n  }\n\n  return typeof value\n}\n",
    "export const inspectBoolean = (value) => value.toString()\n",
    "export const inspectNull = () => \"null\"\n",
    "// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) return arr\n}\n",
    "export default function _iterableToArrayLimit(arr, i) {\n  // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n  // iterators etc. variable names have been minimised to reduce the size of this massive\n  // helper. sometimes spec compliance is annoying :(\n  //\n  // _n = _iteratorNormalCompletion\n  // _d = _didIteratorError\n  // _e = _iteratorError\n  // _i = _iterator\n  // _s = _step\n  var _i =\n    arr == null\n      ? null\n      : (typeof Symbol !== \"undefined\" && arr[Symbol.iterator]) || arr[\"@@iterator\"]\n  if (_i == null) return\n  var _arr = []\n  var _n = true\n  var _d = false\n  var _s, _e\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value)\n      if (i && _arr.length === i) break\n    }\n  } catch (err) {\n    _d = true\n    _e = err\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]()\n    } finally {\n      if (_d) throw _e\n    }\n  }\n  return _arr\n}\n",
    "export default () => {\n  throw new TypeError(\n    \"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n  )\n}\n",
    "import arrayWithHoles from \"../arrayWithHoles/arrayWithHoles.js\"\nimport iterableToArrayLimit from \"../iterableToArrayLimit/iterableToArrayLimit.js\"\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\nimport nonIterableRest from \"../nonIterableRest/nonIterableRest.js\"\n\nexport default (arr, i) =>\n  arrayWithHoles(arr) ||\n  iterableToArrayLimit(arr, i) ||\n  unsupportedIterableToArray(arr, i) ||\n  nonIterableRest()\n",
    "// https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/rules/numeric-separators-style.js\n\nexport const inspectNumber = (value, { numericSeparator }) => {\n  if (isNegativeZero(value)) {\n    return \"-0\"\n  }\n\n  // isNaN\n  // eslint-disable-next-line no-self-compare\n  if (value !== value) {\n    return \"NaN\"\n  }\n\n  if (value === Infinity) {\n    return \"Infinity\"\n  }\n\n  if (value === -Infinity) {\n    return \"-Infinity\"\n  }\n\n  const numberString = String(value)\n\n  if (!numericSeparator) {\n    return numberString\n  }\n\n  const { number, mark = \"\", sign = \"\", power = \"\" } = numberString.match(\n    /^(?<number>.*?)(?:(?<mark>e)(?<sign>[+-])?(?<power>\\d+))?$/i,\n  ).groups\n  const numberWithSeparators = formatNumber(number)\n  const powerWithSeparators = addSeparator(power, {\n    minimumDigits: 5,\n    groupLength: 3,\n  })\n  return `${numberWithSeparators}${mark}${sign}${powerWithSeparators}`\n}\n\n// Use this and instead of Object.is(value, -0)\n// because in some corner cases firefox returns false\n// for Object.is(-0, -0)\nconst isNegativeZero = (value) => {\n  return value === 0 && 1 / value === -Infinity\n}\n\nconst formatNumber = (numberString) => {\n  const parts = numberString.split(\".\")\n  const [integer, fractional] = parts\n\n  if (parts.length === 2) {\n    const integerWithSeparators = addSeparator(integer, {\n      minimumDigits: 5,\n      groupLength: 3,\n    })\n    const fractionalWithSeparators = addSeparatorFromLeft(fractional, {\n      minimumDigits: 5,\n      groupLength: 3,\n    })\n    return `${integerWithSeparators}.${fractionalWithSeparators}`\n  }\n\n  return addSeparator(integer, {\n    minimumDigits: 5,\n    groupLength: 3,\n  })\n}\n\nconst addSeparator = (numberString, { minimumDigits, groupLength }) => {\n  if (numberString[0] === \"-\") {\n    return `-${groupDigits(numberString.slice(1), { minimumDigits, groupLength })}`\n  }\n  return groupDigits(numberString, { minimumDigits, groupLength })\n}\n\nconst groupDigits = (digits, { minimumDigits, groupLength }) => {\n  const digitCount = digits.length\n  if (digitCount < minimumDigits) {\n    return digits\n  }\n\n  let digitsWithSeparator = digits.slice(-groupLength)\n  let remainingDigits = digits.slice(0, -groupLength)\n  while (remainingDigits.length) {\n    const group = remainingDigits.slice(-groupLength)\n    remainingDigits = remainingDigits.slice(0, -groupLength)\n    digitsWithSeparator = `${group}_${digitsWithSeparator}`\n  }\n  return digitsWithSeparator\n}\n\nconst addSeparatorFromLeft = (value, { minimumDigits, groupLength }) => {\n  const { length } = value\n  if (length < minimumDigits) {\n    return value\n  }\n\n  const parts = []\n  for (let start = 0; start < length; start += groupLength) {\n    const end = Math.min(start + groupLength, length)\n    parts.push(value.slice(start, end))\n  }\n  return parts.join(\"_\")\n}\n",
    "/* eslint-disable new-cap */\n\nexport const inspectString = (value, { preferSingleQuote }) => {\n  return escapeString(value, { preferSingleQuote })\n}\n\n// https://github.com/nodejs/node/blob/31d1d0c4c19fea5007eb8c55a4cb1178f295c8ca/lib/internal/util/inspect.js#L463\nconst escapeString = (str, { preferSingleQuote }) => {\n  const escapeSingleQuote = preferSingleQuote\n\n  let result = \"\"\n  let last = 0\n  const lastIndex = str.length\n  for (let i = 0; i < lastIndex; i++) {\n    const point = str.charCodeAt(i)\n    if (\n      (escapeSingleQuote && point === 39) ||\n      point === 92 ||\n      point < 32 ||\n      (point > 126 && point < 160) ||\n      // line separators\n      point === 8232 ||\n      point === 8233\n    ) {\n      // eslint-disable-next-line no-nested-ternary\n      const replacement = point === 8232 ? \"\\\\u2028\" : point === 8233 ? \"\\\\u2029\" : meta[point]\n\n      if (last === i) {\n        result += replacement\n      } else {\n        result += `${str.slice(last, i)}${replacement}`\n      }\n      last = i + 1\n    }\n  }\n\n  if (last !== lastIndex) {\n    result += str.slice(last)\n  }\n  return quote(result, { preferSingleQuote })\n}\n\nconst quote = (string, { preferSingleQuote }) => {\n  if (preferSingleQuote) {\n    return `'${string}'`\n  }\n  return `\"${string}\"`\n}\n\n// prettier-ignore\nconst meta = [\n  '\\\\x00', '\\\\x01', '\\\\x02', '\\\\x03', '\\\\x04', '\\\\x05', '\\\\x06', '\\\\x07', // x07\n  '\\\\b', '\\\\t', '\\\\n', '\\\\x0B', '\\\\f', '\\\\r', '\\\\x0E', '\\\\x0F',           // x0F\n  '\\\\x10', '\\\\x11', '\\\\x12', '\\\\x13', '\\\\x14', '\\\\x15', '\\\\x16', '\\\\x17', // x17\n  '\\\\x18', '\\\\x19', '\\\\x1A', '\\\\x1B', '\\\\x1C', '\\\\x1D', '\\\\x1E', '\\\\x1F', // x1F\n  '', '', '', '', '', '', '', \"\\\\'\", '', '', '', '', '', '', '', '',      // x2F\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x3F\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x4F\n  '', '', '', '', '', '', '', '', '', '', '', '', '\\\\\\\\', '', '', '',     // x5F\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',         // x6F\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '\\\\x7F',    // x7F\n  '\\\\x80', '\\\\x81', '\\\\x82', '\\\\x83', '\\\\x84', '\\\\x85', '\\\\x86', '\\\\x87', // x87\n  '\\\\x88', '\\\\x89', '\\\\x8A', '\\\\x8B', '\\\\x8C', '\\\\x8D', '\\\\x8E', '\\\\x8F', // x8F\n  '\\\\x90', '\\\\x91', '\\\\x92', '\\\\x93', '\\\\x94', '\\\\x95', '\\\\x96', '\\\\x97', // x97\n  '\\\\x98', '\\\\x99', '\\\\x9A', '\\\\x9B', '\\\\x9C', '\\\\x9D', '\\\\x9E', '\\\\x9F', // x9F\n];\n",
    "export const inspectSymbol = (value, { nestedInspect, parenthesis }) => {\n  const symbolDescription = symbolToDescription(value)\n  const symbolDescriptionSource = symbolDescription ? nestedInspect(symbolDescription) : \"\"\n  const symbolSource = `Symbol(${symbolDescriptionSource})`\n\n  if (parenthesis) return `${symbolSource}`\n  return symbolSource\n}\n\nconst symbolToDescription =\n  \"description\" in Symbol.prototype\n    ? (symbol) => symbol.description\n    : (symbol) => {\n        const toStringResult = symbol.toString()\n        const openingParenthesisIndex = toStringResult.indexOf(\"(\")\n        const closingParenthesisIndex = toStringResult.indexOf(\")\")\n        const symbolDescription = toStringResult.slice(\n          openingParenthesisIndex + 1,\n          closingParenthesisIndex,\n        )\n        return symbolDescription\n      }\n",
    "export const inspectUndefined = () => \"undefined\"\n",
    "export const inspectBigInt = (value) => {\n  return `${value}n`\n}\n",
    "import { inspectBoolean } from \"./boolean.js\"\nimport { inspectNull } from \"./null.js\"\nimport { inspectNumber } from \"./number.js\"\nimport { inspectString } from \"./string.js\"\nimport { inspectSymbol } from \"./symbol.js\"\nimport { inspectUndefined } from \"./undefined.js\"\nimport { inspectBigInt } from \"./bigint.js\"\n\nexport const primitiveMap = {\n  boolean: inspectBoolean,\n  null: inspectNull,\n  number: inspectNumber,\n  string: inspectString,\n  symbol: inspectSymbol,\n  undefined: inspectUndefined,\n  bigint: inspectBigInt,\n}\n",
    "export const preNewLineAndIndentation = (value, { depth, indentUsingTab, indentSize }) => {\n  return `${newLineAndIndent({\n    count: depth + 1,\n    useTabs: indentUsingTab,\n    size: indentSize,\n  })}${value}`\n}\n\nconst postNewLineAndIndentation = ({ depth, indentUsingTab, indentSize }) => {\n  return newLineAndIndent({ count: depth, useTabs: indentUsingTab, size: indentSize })\n}\n\nconst newLineAndIndent = ({ count, useTabs, size }) => {\n  if (useTabs) {\n    // eslint-disable-next-line prefer-template\n    return \"\\n\" + \"\\t\".repeat(count)\n  }\n  // eslint-disable-next-line prefer-template\n  return \"\\n\" + \" \".repeat(count * size)\n}\n\nexport const wrapNewLineAndIndentation = (value, { depth, indentUsingTab, indentSize }) => {\n  return `${preNewLineAndIndentation(value, {\n    depth,\n    indentUsingTab,\n    indentSize,\n  })}${postNewLineAndIndentation({ depth, indentUsingTab, indentSize })}`\n}\n",
    "export const inspectConstructor = (value, { parenthesis, useNew }) => {\n  let formattedString = value\n\n  if (parenthesis) {\n    formattedString = `(${value})`\n  }\n\n  if (useNew) {\n    formattedString = `new ${formattedString}`\n  }\n\n  return formattedString\n}\n",
    "import { preNewLineAndIndentation, wrapNewLineAndIndentation } from \"./util.js\"\nimport { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectArray = (\n  value,\n  { seen = [], nestedInspect, depth, indentUsingTab, indentSize, parenthesis, useNew },\n) => {\n  if (seen.indexOf(value) > -1) {\n    return \"Symbol.for('circular')\"\n  }\n  seen.push(value)\n\n  let valuesSource = \"\"\n  let i = 0\n  const j = value.length\n\n  while (i < j) {\n    const valueSource = value.hasOwnProperty(i) ? nestedInspect(value[i], { seen }) : \"\"\n    if (i === 0) {\n      valuesSource += valueSource\n    } else {\n      valuesSource += `,${preNewLineAndIndentation(valueSource, {\n        depth,\n        indentUsingTab,\n        indentSize,\n      })}`\n    }\n    i++\n  }\n\n  let arraySource\n  if (valuesSource.length) {\n    arraySource = wrapNewLineAndIndentation(valuesSource, { depth, indentUsingTab, indentSize })\n  } else {\n    arraySource = \"\"\n  }\n\n  arraySource = `[${arraySource}]`\n\n  return inspectConstructor(arraySource, { parenthesis, useNew })\n}\n",
    "export const inspectBigIntObject = (value, { nestedInspect }) => {\n  const bigIntSource = nestedInspect(value.valueOf())\n\n  return `BigInt(${bigIntSource})`\n}\n",
    "import { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectBooleanObject = (value, { nestedInspect, useNew, parenthesis }) => {\n  const booleanSource = nestedInspect(value.valueOf())\n  return inspectConstructor(`Boolean(${booleanSource})`, { useNew, parenthesis })\n}\n",
    "import { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectError = (error, { nestedInspect, useNew, parenthesis }) => {\n  const messageSource = nestedInspect(error.message)\n\n  const errorSource = inspectConstructor(`${errorToConstructorName(error)}(${messageSource})`, {\n    useNew,\n    parenthesis,\n  })\n  return errorSource\n}\n\nconst errorToConstructorName = ({ name }) => {\n  if (derivedErrorNameArray.includes(name)) {\n    return name\n  }\n  return \"Error\"\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nconst derivedErrorNameArray = [\n  \"EvalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\",\n]\n",
    "import { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectDate = (value, { nestedInspect, useNew, parenthesis }) => {\n  const dateSource = nestedInspect(value.valueOf(), {\n    numericSeparator: false,\n  })\n  return inspectConstructor(`Date(${dateSource})`, { useNew, parenthesis })\n}\n",
    "export const inspectFunction = (value, { showFunctionBody, parenthesis, depth }) => {\n  let functionSource\n  if (showFunctionBody) {\n    functionSource = value.toString()\n  } else {\n    const isArrowFunction = value.prototype === undefined\n    const head = isArrowFunction ? \"() =>\" : `function ${depth === 0 ? value.name : \"\"}()`\n    functionSource = `${head} {/* hidden */}`\n  }\n\n  if (parenthesis) {\n    return `(${functionSource})`\n  }\n  return functionSource\n}\n",
    "import { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectNumberObject = (value, { nestedInspect, useNew, parenthesis }) => {\n  const numberSource = nestedInspect(value.valueOf())\n  return inspectConstructor(`Number(${numberSource})`, { useNew, parenthesis })\n}\n",
    "import { preNewLineAndIndentation, wrapNewLineAndIndentation } from \"./util.js\"\nimport { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectObject = (\n  value,\n  {\n    nestedInspect,\n    seen = [],\n    depth,\n    indentUsingTab,\n    indentSize,\n    objectConstructor,\n    parenthesis,\n    useNew,\n  },\n) => {\n  if (seen.indexOf(value) > -1) return \"Symbol.for('circular')\"\n\n  seen.push(value)\n\n  const propertySourceArray = []\n  Object.getOwnPropertyNames(value).forEach((propertyName) => {\n    const propertyNameAsNumber = parseInt(propertyName, 10)\n    const propertyNameSource = nestedInspect(\n      Number.isInteger(propertyNameAsNumber) ? propertyNameAsNumber : propertyName,\n    )\n    propertySourceArray.push({\n      nameOrSymbolSource: propertyNameSource,\n      valueSource: nestedInspect(value[propertyName], { seen }),\n    })\n  })\n  Object.getOwnPropertySymbols(value).forEach((symbol) => {\n    propertySourceArray.push({\n      nameOrSymbolSource: `[${nestedInspect(symbol)}]`,\n      valueSource: nestedInspect(value[symbol], { seen }),\n    })\n  })\n\n  let propertiesSource = \"\"\n  propertySourceArray.forEach(({ nameOrSymbolSource, valueSource }, index) => {\n    if (index === 0) {\n      propertiesSource += `${nameOrSymbolSource}: ${valueSource}`\n    } else {\n      propertiesSource += `,${preNewLineAndIndentation(`${nameOrSymbolSource}: ${valueSource}`, {\n        depth,\n        indentUsingTab,\n        indentSize,\n      })}`\n    }\n  })\n\n  let objectSource\n  if (propertiesSource.length) {\n    objectSource = `${wrapNewLineAndIndentation(propertiesSource, {\n      depth,\n      indentUsingTab,\n      indentSize,\n    })}`\n  } else {\n    objectSource = \"\"\n  }\n\n  if (objectConstructor) {\n    objectSource = `Object({${objectSource}})`\n  } else {\n    objectSource = `{${objectSource}}`\n  }\n\n  return inspectConstructor(objectSource, { parenthesis, useNew })\n}\n",
    "export const inspectRegExp = (value) => value.toString()\n",
    "import { inspectConstructor } from \"./constructor.js\"\n\nexport const inspectStringObject = (value, { nestedInspect, useNew, parenthesis }) => {\n  const stringSource = nestedInspect(value.valueOf())\n\n  return inspectConstructor(`String(${stringSource})`, { useNew, parenthesis })\n}\n",
    "import { inspectArray } from \"./array.js\"\nimport { inspectBigIntObject } from \"./bigint-object.js\"\nimport { inspectBooleanObject } from \"./boolean-object.js\"\nimport { inspectError } from \"./error.js\"\nimport { inspectDate } from \"./date.js\"\nimport { inspectFunction } from \"./function.js\"\nimport { inspectNumberObject } from \"./number-object.js\"\nimport { inspectObject } from \"./object.js\"\nimport { inspectRegExp } from \"./regexp.js\"\nimport { inspectStringObject } from \"./string-object.js\"\n\nexport const compositeMap = {\n  Array: inspectArray,\n  BigInt: inspectBigIntObject,\n  Boolean: inspectBooleanObject,\n  Error: inspectError,\n  Date: inspectDate,\n  Function: inspectFunction,\n  Number: inspectNumberObject,\n  Object: inspectObject,\n  RegExp: inspectRegExp,\n  String: inspectStringObject,\n}\n",
    "import { valueToType } from \"./internal/valueToType.js\"\nimport { primitiveMap } from \"./internal/primitiveMap.js\"\nimport { compositeMap } from \"./internal/compositeMap.js\"\nimport { inspectConstructor } from \"./internal/constructor.js\"\nimport { inspectObject } from \"./internal/object.js\"\n\nexport const inspect = (\n  value,\n  {\n    parenthesis = false,\n    preferSingleQuote = false,\n    useNew = false,\n    objectConstructor = false,\n    showFunctionBody = false,\n    indentUsingTab = false,\n    indentSize = 2,\n    numericSeparator = true,\n  } = {},\n) => {\n  const scopedInspect = (scopedValue, scopedOptions) => {\n    const { primitiveType, compositeType } = valueToType(scopedValue)\n    const options = {\n      ...scopedOptions,\n      nestedInspect: (nestedValue, nestedOptions = {}) => {\n        return scopedInspect(nestedValue, {\n          ...scopedOptions,\n          depth: scopedOptions.depth + 1,\n          ...nestedOptions,\n        })\n      },\n    }\n\n    if (primitiveType) {\n      return primitiveMap[primitiveType](scopedValue, options)\n    }\n\n    if (compositeType in compositeMap) {\n      return compositeMap[compositeType](scopedValue, options)\n    }\n\n    return inspectConstructor(`${compositeType}(${inspectObject(scopedValue, options)})`, {\n      ...options,\n      parenthesis: false,\n    })\n  }\n\n  return scopedInspect(value, {\n    parenthesis,\n    preferSingleQuote,\n    useNew,\n    objectConstructor,\n    showFunctionBody,\n    indentUsingTab,\n    indentSize,\n    numericSeparator,\n    depth: 0,\n  })\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { propertyToAccessorString } from \"./propertyToAccessorString.js\"\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Well-known_symbols\nexport const symbolToWellKnownSymbol = (symbol) => {\n  const wellKnownSymbolName = Object.getOwnPropertyNames(Symbol).find(\n    (name) => symbol === Symbol[name],\n  )\n  if (wellKnownSymbolName) {\n    return `Symbol${propertyToAccessorString(wellKnownSymbolName)}`\n  }\n\n  const description = symbolToDescription(symbol)\n  if (description) {\n    const key = Symbol.keyFor(symbol)\n    if (key) {\n      return `Symbol.for(${inspect(description)})`\n    }\n    return `Symbol(${inspect(description)})`\n  }\n  return `Symbol()`\n}\n\nconst symbolToDescription = (symbol) => {\n  const toStringResult = symbol.toString()\n  const openingParenthesisIndex = toStringResult.indexOf(\"(\")\n  const closingParenthesisIndex = toStringResult.indexOf(\")\")\n  return toStringResult.slice(openingParenthesisIndex + 1, closingParenthesisIndex)\n  // return symbol.description // does not work on node\n}\n",
    "export const propertyNameToDotNotationAllowed = (propertyName) => {\n  return /^[a-z_$]+[0-9a-z_&]$/i.test(propertyName) || /^[a-z_$]$/i.test(propertyName)\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { symbolToWellKnownSymbol } from \"./symbolToWellKnownSymbol.js\"\nimport { propertyNameToDotNotationAllowed } from \"./propertyNameToDotNotationAllowed.js\"\n\nexport const propertyToAccessorString = (property) => {\n  if (typeof property === \"number\") {\n    return `[${inspect(property)}]`\n  }\n  if (typeof property === \"string\") {\n    const dotNotationAllowedForProperty = propertyNameToDotNotationAllowed(property)\n    if (dotNotationAllowedForProperty) {\n      return `.${property}`\n    }\n    return `[${inspect(property)}]`\n  }\n\n  return `[${symbolToWellKnownSymbol(property)}]`\n}\n",
    "/* eslint-disable no-use-before-define */\nimport { propertyToAccessorString } from \"./propertyToAccessorString.js\"\n\nexport const comparisonToPath = (comparison, name = \"value\") => {\n  const comparisonPath = []\n\n  let ancestor = comparison.parent\n  while (ancestor && ancestor.type !== \"root\") {\n    comparisonPath.unshift(ancestor)\n    ancestor = ancestor.parent\n  }\n  if (comparison.type !== \"root\") {\n    comparisonPath.push(comparison)\n  }\n\n  const path = comparisonPath.reduce((previous, { type, data }) => {\n    if (type === \"property-enumerable\") {\n      return `${previous}${propertyToAccessorString(data)}[[Enumerable]]`\n    }\n    if (type === \"property-configurable\") {\n      return `${previous}${propertyToAccessorString(data)}[[Configurable]]`\n    }\n    if (type === \"property-writable\") {\n      return `${previous}${propertyToAccessorString(data)}[[Writable]]`\n    }\n    if (type === \"property-get\") {\n      return `${previous}${propertyToAccessorString(data)}[[Get]]`\n    }\n    if (type === \"property-set\") {\n      return `${previous}${propertyToAccessorString(data)}[[Set]]`\n    }\n    if (type === \"property-value\") {\n      return `${previous}${propertyToAccessorString(data)}`\n    }\n    if (type === \"map-entry\") {\n      return `${previous}[[mapEntry:${data}]]`\n    }\n    if (type === \"set-entry\") {\n      return `${previous}[[setEntry:${data}]]`\n    }\n    if (type === \"reference\") {\n      return `${previous}`\n    }\n    if (type === \"integrity\") {\n      return `${previous}[[Integrity]]`\n    }\n    if (type === \"extensibility\") {\n      return `${previous}[[Extensible]]`\n    }\n    if (type === \"prototype\") {\n      return `${previous}[[Prototype]]`\n    }\n    if (type === \"properties\") {\n      return `${previous}`\n    }\n    if (type === \"properties-order\") {\n      return `${previous}`\n    }\n    if (type === \"symbols\") {\n      return `${previous}`\n    }\n    if (type === \"symbols-order\") {\n      return `${previous}`\n    }\n    if (type === \"to-string-return-value\") {\n      return `${previous}.toString()`\n    }\n    if (type === \"value-of-return-value\") {\n      return `${previous}.valueOf()`\n    }\n    if (type === \"identity\" || type === \"not\") {\n      return previous\n    }\n    if (type === \"any\") {\n      return previous\n    }\n    return `${previous} type:${type}, data:${data}`\n  }, name)\n\n  return path\n}\n",
    "import arrayLikeToArray from \"../arrayLikeToArray/arrayLikeToArray.js\"\n\n// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr)\n}\n",
    "export default function _iterableToArray(iter) {\n  if (\n    (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null) ||\n    iter[\"@@iterator\"] != null\n  )\n    return Array.from(iter)\n}\n",
    "export default () => {\n  throw new TypeError(\n    \"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n  )\n}\n",
    "import arrayWithoutHoles from \"../arrayWithoutHoles/arrayWithoutHoles.js\"\nimport iterableToArray from \"../iterableToArray/iterableToArray.js\"\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\nimport nonIterableSpread from \"../nonIterableSpread/nonIterableSpread.js\"\n\nexport default (arr) =>\n  arrayWithoutHoles(arr) ||\n  iterableToArray(arr) ||\n  unsupportedIterableToArray(arr) ||\n  nonIterableSpread()\n",
    "import { isComposite } from \"./isComposite.js\"\nimport { propertyToAccessorString } from \"./propertyToAccessorString.js\"\n\nexport const valueToWellKnown = (value) => {\n  const compositeWellKnownPath = valueToCompositeWellKnownPath(value)\n  if (compositeWellKnownPath) {\n    return compositeWellKnownPath\n      .slice(1)\n      .reduce(\n        (previous, property) => `${previous}${propertyToAccessorString(property)}`,\n        compositeWellKnownPath[0],\n      )\n  }\n  return null\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\nconst compositeWellKnownMap = new WeakMap()\nconst primitiveWellKnownMap = new Map()\n\nconst valueToCompositeWellKnownPath = (value) => {\n  return compositeWellKnownMap.get(value)\n}\n\nconst isPrimitive = (value) => !isComposite(value)\n\nexport const addWellKnownComposite = (value, name) => {\n  const visitValue = (value, path) => {\n    if (isPrimitive(value)) {\n      primitiveWellKnownMap.set(value, path)\n      return\n    }\n\n    if (compositeWellKnownMap.has(value)) return // prevent infinite recursion\n    compositeWellKnownMap.set(value, path)\n\n    const visitProperty = (property) => {\n      let descriptor\n      try {\n        descriptor = Object.getOwnPropertyDescriptor(value, property)\n      } catch (e) {\n        // may happen if you try to access some iframe properties or stuff like that\n        if (e.name === \"SecurityError\") {\n          return\n        }\n        throw e\n      }\n\n      if (!descriptor) {\n        return\n      }\n\n      // do not trigger getter/setter\n      if (\"value\" in descriptor) {\n        const propertyValue = descriptor.value\n        visitValue(propertyValue, [...path, property])\n      }\n    }\n\n    Object.getOwnPropertyNames(value).forEach((name) => visitProperty(name))\n    Object.getOwnPropertySymbols(value).forEach((symbol) => visitProperty(symbol))\n  }\n\n  visitValue(value, [name])\n}\n\n/* globals global, window */\nif (typeof global === \"object\") {\n  addWellKnownComposite(global, \"global\")\n}\nif (typeof window === \"object\") {\n  addWellKnownComposite(window, \"window\")\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { valueToWellKnown } from \"./wellKnownValue.js\"\n\nexport const valueToString = (value) => {\n  return valueToWellKnown(value) || inspect(value)\n}\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToString } from \"../valueToString.js\"\n\nexport const anyComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"any\") return undefined\n\n  const path = comparisonToPath(comparison)\n  const actualValue = valueToString(comparison.actual)\n  const expectedConstructor = comparison.expected\n\n  return createAnyMessage({ path, expectedConstructor, actualValue })\n}\n\nconst createAnyMessage = ({ path, expectedConstructor, actualValue }) => `unexpected value.\n--- found ---\n${actualValue}\n--- expected ---\nany(${expectedConstructor.name})\n--- at ---\n${path}`\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToString } from \"../valueToString.js\"\n\nexport const defaultComparisonToErrorMessage = (comparison) => {\n  const path = comparisonToPath(comparison)\n  const expectedValue = valueToString(comparison.expected)\n  const actualValue = valueToString(comparison.actual)\n\n  return createUnequalValuesMessage({ path, expectedValue, actualValue })\n}\n\nconst createUnequalValuesMessage = ({ path, expectedValue, actualValue }) => `unequal values.\n--- found ---\n${actualValue}\n--- expected ---\n${expectedValue}\n--- at ---\n${path}`\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToString } from \"../valueToString.js\"\n\nexport const referenceComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"reference\") return undefined\n\n  const { actual, expected } = comparison\n  const isMissing = expected && !actual\n  const isExtra = !expected && actual\n  const path = comparisonToPath(comparison)\n\n  if (isExtra) {\n    return createUnexpectedReferenceMessage({\n      path,\n      expectedValue: valueToString(comparison.parent.expected),\n      unexpectedReferencePath: comparisonToPath(actual, \"actual\"),\n    })\n  }\n\n  if (isMissing) {\n    return createMissingReferenceMessage({\n      path,\n      expectedReferencePath: comparisonToPath(expected, \"expected\"),\n      actualValue: valueToString(comparison.parent.actual),\n    })\n  }\n\n  return createUnequalRefencesMessage({\n    path,\n    expectedReferencePath: comparisonToPath(expected, \"expected\"),\n    actualReferencePath: comparisonToPath(actual, \"actual\"),\n  })\n}\n\nconst createUnexpectedReferenceMessage = ({\n  path,\n  expectedValue,\n  unexpectedReferencePath,\n}) => `found a reference instead of a value.\n--- reference found to ---\n${unexpectedReferencePath}\n--- value expected ---\n${expectedValue}\n--- at ---\n${path}`\n\nconst createMissingReferenceMessage = ({\n  path,\n  expectedReferencePath,\n  actualValue,\n}) => `found a value instead of a reference.\n--- value found ---\n${actualValue}\n--- reference expected to ---\n${expectedReferencePath}\n--- at ---\n${path}`\n\nconst createUnequalRefencesMessage = ({\n  path,\n  expectedReferencePath,\n  actualReferencePath,\n}) => `unequal references.\n--- reference found to ---\n${actualReferencePath}\n--- reference expected to ---\n${expectedReferencePath}\n--- at ---\n${path}`\n",
    "export const comparisonToRootComparison = (comparison) => {\n  let current = comparison\n  while (current) {\n    if (current.parent) {\n      current = current.parent\n    } else {\n      break\n    }\n  }\n  return current\n}\n",
    "export const findSelfOrAncestorComparison = (comparison, predicate) => {\n  let current = comparison\n  let foundComparison\n  while (current) {\n    if (current && predicate(current)) {\n      foundComparison = current\n      current = foundComparison.parent\n      while (current) {\n        if (predicate(current)) foundComparison = current\n        current = current.parent\n      }\n      return foundComparison\n    }\n    current = current.parent\n  }\n  return null\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToWellKnown } from \"../wellKnownValue.js\"\nimport { comparisonToRootComparison } from \"../comparisonToRootComparison.js\"\nimport { findSelfOrAncestorComparison } from \"../findSelfOrAncestorComparison.js\"\n\nexport const prototypeComparisonToErrorMessage = (comparison) => {\n  const prototypeComparison = findSelfOrAncestorComparison(\n    comparison,\n    ({ type }) => type === \"prototype\",\n  )\n  if (!prototypeComparison) return null\n\n  const rootComparison = comparisonToRootComparison(comparison)\n  const path = comparisonToPath(prototypeComparison)\n  const prototypeToString = (prototype) => {\n    const wellKnown = valueToWellKnown(prototype)\n    if (wellKnown) return wellKnown\n    // we could check in the whole comparison tree, not only for actual/expected\n    // but any reference to that prototype\n    // to have a better name for it\n    // if anything refer to it except himself\n    // it would be a better name for that object no ?\n    if (prototype === rootComparison.expected) return \"expected\"\n    if (prototype === rootComparison.actual) return \"actual\"\n    return inspect(prototype)\n  }\n  const expectedPrototype = prototypeComparison.expected\n  const actualPrototype = prototypeComparison.actual\n\n  return createUnequalPrototypesMessage({\n    path,\n    expectedPrototype: prototypeToString(expectedPrototype),\n    actualPrototype: prototypeToString(actualPrototype),\n  })\n}\n\nconst createUnequalPrototypesMessage = ({\n  path,\n  expectedPrototype,\n  actualPrototype,\n}) => `unequal prototypes.\n--- prototype found ---\n${actualPrototype}\n--- prototype expected ---\n${expectedPrototype}\n--- at ---\n${path}`\n",
    "export const createDetailedMessage = (message, details = {}) => {\n  let string = `${message}`\n\n  Object.keys(details).forEach((key) => {\n    const value = details[key]\n    string += `\n--- ${key} ---\n${\n  Array.isArray(value)\n    ? value.join(`\n`)\n    : value\n}`\n  })\n\n  return string\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { createDetailedMessage } from \"@jsenv/logger\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\n\nexport const propertiesComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"properties\") {\n    return undefined\n  }\n\n  const path = comparisonToPath(comparison.parent)\n  const missing = comparison.actual.missing\n  const extra = comparison.actual.extra\n  const missingCount = missing.length\n  const extraCount = extra.length\n  const unexpectedProperties = {}\n  extra.forEach((propertyName) => {\n    unexpectedProperties[propertyName] = comparison.parent.actual[propertyName]\n  })\n  const missingProperties = {}\n  missing.forEach((propertyName) => {\n    missingProperties[propertyName] = comparison.parent.expected[propertyName]\n  })\n\n  if (missingCount === 1 && extraCount === 0) {\n    return createDetailedMessage(\"1 missing property.\", {\n      \"missing property\": inspect(missingProperties),\n      \"at\": path,\n    })\n  }\n\n  if (missingCount > 1 && extraCount === 0) {\n    return createDetailedMessage(`${missingCount} missing properties.`, {\n      \"missing properties\": inspect(missingProperties),\n      \"at\": path,\n    })\n  }\n\n  if (missingCount === 0 && extraCount === 1) {\n    return createDetailedMessage(`1 unexpected property.`, {\n      \"unexpected property\": inspect(unexpectedProperties),\n      \"at\": path,\n    })\n  }\n\n  if (missingCount === 0 && extraCount > 1) {\n    return createDetailedMessage(`${extraCount} unexpected properties.`, {\n      \"unexpected properties\": inspect(unexpectedProperties),\n      \"at\": path,\n    })\n  }\n\n  let message = \"\"\n  if (missingCount === 1) {\n    message += `1 missing property`\n  } else {\n    message += `${missingCount} missing properties`\n  }\n  if (extraCount === 1) {\n    message += ` and 1 unexpected property.`\n  } else {\n    message += ` and ${extraCount} unexpected properties.`\n  }\n  return createDetailedMessage(message, {\n    [missingCount === 1 ? \"missing property\" : \"missing properties\"]: inspect(missingProperties),\n    [extraCount === 1 ? \"unexpected property\" : \"unexpected properties\"]: inspect(\n      unexpectedProperties,\n    ),\n    at: path,\n  })\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\n\nexport const propertiesOrderComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"properties-order\") return undefined\n\n  const path = comparisonToPath(comparison)\n  const expected = comparison.expected\n  const actual = comparison.actual\n\n  return createUnexpectedPropertiesOrderMessage({\n    path,\n    expectedPropertiesOrder: propertyNameArrayToString(expected),\n    actualPropertiesOrder: propertyNameArrayToString(actual),\n  })\n}\n\nconst createUnexpectedPropertiesOrderMessage = ({\n  path,\n  expectedPropertiesOrder,\n  actualPropertiesOrder,\n}) => `unexpected properties order.\n--- properties order found ---\n${actualPropertiesOrder.join(`\n`)}\n--- properties order expected ---\n${expectedPropertiesOrder.join(`\n`)}\n--- at ---\n${path}`\n\nconst propertyNameArrayToString = (propertyNameArray) => {\n  return propertyNameArray.map((propertyName) => inspect(propertyName))\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\n\nexport const symbolsComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"symbols\") return undefined\n\n  const path = comparisonToPath(comparison)\n  const extra = comparison.actual.extra\n  const missing = comparison.actual.missing\n  const hasExtra = extra.length > 0\n  const hasMissing = missing.length > 0\n\n  if (hasExtra && !hasMissing) {\n    return createUnexpectedSymbolsMessage({ path, unexpectedSymbols: symbolArrayToString(extra) })\n  }\n\n  if (!hasExtra && hasMissing) {\n    return createMissingSymbolsMessage({ path, missingSymbols: symbolArrayToString(missing) })\n  }\n\n  return createUnexpectedAndMissingSymbolsMessage({\n    path,\n    unexpectedSymbols: symbolArrayToString(extra),\n    missingSymbols: symbolArrayToString(missing),\n  })\n}\n\nconst createUnexpectedSymbolsMessage = ({ path, unexpectedSymbols }) => `unexpected symbols.\n--- unexpected symbol list ---\n${unexpectedSymbols.join(`\n`)}\n--- at ---\n${path}`\n\nconst createMissingSymbolsMessage = ({ path, missingSymbols }) => `missing symbols.\n--- missing symbol list ---\n${missingSymbols.join(`\n`)}\n--- at ---\n${path}`\n\nconst createUnexpectedAndMissingSymbolsMessage = ({\n  path,\n  unexpectedSymbols,\n  missingSymbols,\n}) => `unexpected and missing symbols.\n--- unexpected symbol list ---\n${unexpectedSymbols.join(`\n`)}\n--- missing symbol list ---\n${missingSymbols.join(`\n`)}\n--- at ---\n${path}`\n\nconst symbolArrayToString = (symbolArray) => {\n  return symbolArray.map((symbol) => inspect(symbol))\n}\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\n\nexport const symbolsOrderComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"symbols-order\") return undefined\n\n  const path = comparisonToPath(comparison)\n  const expected = comparison.expected\n  const actual = comparison.actual\n\n  return createUnexpectedSymbolsOrderMessage({\n    path,\n    expectedSymbolsOrder: symbolArrayToString(expected),\n    actualSymbolsOrder: symbolArrayToString(actual),\n  })\n}\n\nconst createUnexpectedSymbolsOrderMessage = ({\n  path,\n  expectedSymbolsOrder,\n  actualSymbolsOrder,\n}) => `unexpected symbols order.\n--- symbols order found ---\n${actualSymbolsOrder.join(`\n`)}\n--- symbols order expected ---\n${expectedSymbolsOrder.join(`\n`)}\n--- at ---\n${path}`\n\nconst symbolArrayToString = (symbolArray) => {\n  return symbolArray.map((symbol) => inspect(symbol))\n}\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\n\nexport const setSizeComparisonToMessage = (comparison) => {\n  if (comparison.type !== \"set-size\") return undefined\n\n  if (comparison.actual > comparison.expected) return createBiggerThanExpectedMessage(comparison)\n\n  return createSmallerThanExpectedMessage(comparison)\n}\n\nconst createBiggerThanExpectedMessage = (comparison) => `a set is bigger than expected.\n--- set size found ---\n${comparison.actual}\n--- set size expected ---\n${comparison.expected}\n--- at ---\n${comparisonToPath(comparison.parent)}`\n\nconst createSmallerThanExpectedMessage = (comparison) => `a set is smaller than expected.\n--- set size found ---\n${comparison.actual}\n--- set size expected ---\n${comparison.expected}\n--- at ---\n${comparisonToPath(comparison.parent)}`\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToString } from \"../valueToString.js\"\nimport { findSelfOrAncestorComparison } from \"../findSelfOrAncestorComparison.js\"\n\nexport const mapEntryComparisonToErrorMessage = (comparison) => {\n  const mapEntryComparison = findSelfOrAncestorComparison(\n    comparison,\n    ({ type }) => type === \"map-entry\",\n  )\n  if (!mapEntryComparison) return null\n\n  const isUnexpected = !mapEntryComparison.expected && mapEntryComparison.actual\n  if (isUnexpected) return createUnexpectedMapEntryErrorMessage(mapEntryComparison)\n\n  const isMissing = mapEntryComparison.expected && !mapEntryComparison.actual\n  if (isMissing) return createMissingMapEntryErrorMessage(mapEntryComparison)\n\n  return null\n}\n\nconst createUnexpectedMapEntryErrorMessage = (comparison) => `an entry is unexpected.\n--- unexpected entry key ---\n${valueToString(comparison.actual.key)}\n--- unexpected entry value ---\n${valueToString(comparison.actual.value)}\n--- at ---\n${comparisonToPath(comparison.parent)}`\n\nconst createMissingMapEntryErrorMessage = (comparison) => `an entry is missing.\n--- missing entry key ---\n${valueToString(comparison.expected.key)}\n--- missing entry value ---\n${valueToString(comparison.expected.value)}\n--- at ---\n${comparisonToPath(comparison.parent)}`\n",
    "import { comparisonToPath } from \"../comparisonToPath.js\"\nimport { valueToString } from \"../valueToString.js\"\n\nexport const notComparisonToErrorMessage = (comparison) => {\n  if (comparison.type !== \"not\") return undefined\n\n  const path = comparisonToPath(comparison)\n  const actualValue = valueToString(comparison.actual)\n\n  return createNotMessage({ path, actualValue })\n}\n\nconst createNotMessage = ({ path, actualValue }) => `unexpected value.\n--- found ---\n${actualValue}\n--- expected ---\nan other value\n--- at ---\n${path}`\n",
    "import { inspect } from \"@jsenv/inspect\"\nimport { createDetailedMessage } from \"@jsenv/logger\"\nimport { comparisonToPath } from \"../comparisonToPath.js\"\nimport { isArray } from \"../object-subtype.js\"\n\nexport const arrayLengthComparisonToMessage = (comparison) => {\n  if (comparison.type !== \"identity\") return undefined\n  const parentComparison = comparison.parent\n  if (parentComparison.type !== \"property-value\") return undefined\n  if (parentComparison.data !== \"length\") return undefined\n  const grandParentComparison = parentComparison.parent\n  if (!isArray(grandParentComparison.actual)) return undefined\n\n  const actualArray = grandParentComparison.actual\n  const expectedArray = grandParentComparison.expected\n  const actualLength = comparison.actual\n  const expectedLength = comparison.expected\n  const path = comparisonToPath(grandParentComparison)\n\n  if (actualLength < expectedLength) {\n    const missingValues = expectedArray.slice(actualLength)\n\n    return createDetailedMessage(`an array is smaller than expected.`, {\n      \"array length found\": actualLength,\n      \"array length expected\": expectedLength,\n      \"missing values\": inspect(missingValues),\n      \"at\": path,\n    })\n  }\n\n  const extraValues = actualArray.slice(expectedLength)\n  return createDetailedMessage(`an array is bigger than expected.`, {\n    \"array length found\": actualLength,\n    \"array length expected\": expectedLength,\n    \"extra values\": inspect(extraValues),\n    \"at\": path,\n  })\n}\n",
    "/* eslint-disable import/max-dependencies */\nimport { anyComparisonToErrorMessage } from \"./anyComparisonToErrorMessage.js\"\nimport { defaultComparisonToErrorMessage } from \"./defaultComparisonToErrorMessage.js\"\nimport { referenceComparisonToErrorMessage } from \"./referenceComparisonToErrorMessage.js\"\nimport { prototypeComparisonToErrorMessage } from \"./prototypeComparisonToErrorMessage.js\"\nimport { propertiesComparisonToErrorMessage } from \"./propertiesComparisonToErrorMessage.js\"\nimport { propertiesOrderComparisonToErrorMessage } from \"./propertiesOrderComparisonToErrorMessage.js\"\nimport { symbolsComparisonToErrorMessage } from \"./symbolsComparisonToErrorMessage.js\"\nimport { symbolsOrderComparisonToErrorMessage } from \"./symbolsOrderComparisonToErrorMessage.js\"\nimport { setSizeComparisonToMessage } from \"./setSizeComparisonToMessage.js\"\nimport { mapEntryComparisonToErrorMessage } from \"./mapEntryComparisonToErrorMessage.js\"\nimport { notComparisonToErrorMessage } from \"./notComparisonToErrorMessage.js\"\nimport { arrayLengthComparisonToMessage } from \"./arrayLengthComparisonToMessage.js\"\n\nexport const comparisonToErrorMessage = (comparison) => {\n  const failedComparison = deepestComparison(comparison)\n  return (\n    firstFunctionReturningSomething(\n      [\n        anyComparisonToErrorMessage,\n        mapEntryComparisonToErrorMessage,\n        notComparisonToErrorMessage,\n        prototypeComparisonToErrorMessage,\n        referenceComparisonToErrorMessage,\n        propertiesComparisonToErrorMessage,\n        propertiesOrderComparisonToErrorMessage,\n        symbolsComparisonToErrorMessage,\n        symbolsOrderComparisonToErrorMessage,\n        setSizeComparisonToMessage,\n        arrayLengthComparisonToMessage,\n      ],\n      failedComparison,\n    ) || defaultComparisonToErrorMessage(failedComparison)\n  )\n}\n\nconst deepestComparison = (comparison) => {\n  let current = comparison\n\n  while (current) {\n    const { children } = current\n    if (children.length === 0) break\n    current = children[children.length - 1]\n  }\n\n  return current\n}\n\nconst firstFunctionReturningSomething = (fns, ...args) => {\n  let i = 0\n  while (i < fns.length) {\n    const fn = fns[i]\n    const returnValue = fn(...args)\n    if (returnValue !== null && returnValue !== undefined) return returnValue\n    i++\n  }\n  return undefined\n}\n",
    "export const isAssertionError = (value) =>\n  value && typeof value === \"object\" && value.name === \"AssertionError\"\n\nexport const createAssertionError = (message) => {\n  const error = new Error(message)\n  error.name = \"AssertionError\"\n  return error\n}\n",
    "/* eslint-disable no-use-before-define */\nimport { compare, createNotExpectation, createAnyExpectation } from \"./internal/compare.js\"\nimport { comparisonToErrorMessage } from \"./internal/toErrorMessage/comparisonToErrorMessage.js\"\nimport { createAssertionError } from \"./assertionError.js\"\n\nexport const assert = (...args) => {\n  if (args.length === 0) {\n    throw new Error(`assert must be called with { actual, expected }, missing first argument`)\n  }\n\n  if (args.length > 1) {\n    throw new Error(`assert must be called with { actual, expected }, received too much arguments`)\n  }\n\n  const firstArg = args[0]\n  if (typeof firstArg !== \"object\" || firstArg === null) {\n    throw new Error(\n      `assert must be called with { actual, expected }, received ${firstArg} as first argument instead of object`,\n    )\n  }\n\n  if (\"actual\" in firstArg === false) {\n    throw new Error(\n      `assert must be called with { actual, expected }, missing actual property on first argument`,\n    )\n  }\n\n  if (\"expected\" in firstArg === false) {\n    throw new Error(\n      `assert must be called with { actual, expected }, missing expected property on first argument`,\n    )\n  }\n\n  return _assert(...args)\n}\n\nassert.not = (value) => {\n  return createNotExpectation(value)\n}\n\nassert.any = (Constructor) => {\n  return createAnyExpectation(Constructor)\n}\n\n/*\n * anyOrder is not documented because ../readme.md#Why-opinionated-\n * but I feel like the property order comparison might be too strict\n * and if we cannot find a proper alternative, being able to disable it\n * might be useful\n *\n * Documentation suggest to take the object and reorder manually\n *\n * const value = { bar: true, foo: true }\n * const actual = { foo: value.foo, bar: value.bar }\n * const expected = { foo: true, bar: true }\n *\n * An other good alternative could be an helper that would sort properties\n *\n * const value = sortProperties(value)\n * const expected = sortProperties({ foo: true, bar: true })\n s*\n */\nconst _assert = ({ actual, expected, message, anyOrder = false }) => {\n  const expectation = {\n    actual,\n    expected,\n  }\n\n  const comparison = compare(expectation, { anyOrder })\n  if (comparison.failed) {\n    const error = createAssertionError(message || comparisonToErrorMessage(comparison))\n    if (Error.captureStackTrace) Error.captureStackTrace(error, assert)\n    throw error\n  }\n}\n"
  ],
  "names": [
    "nativeTypeOf",
    "obj",
    "customTypeOf",
    "Symbol",
    "constructor",
    "prototype",
    "iterator",
    "arrayLikeToArray",
    "arr",
    "len",
    "length",
    "arr2",
    "Array",
    "i",
    "unsupportedIterableToArray",
    "o",
    "minLen",
    "n",
    "Object",
    "toString",
    "call",
    "slice",
    "name",
    "from",
    "test",
    "_createForOfIteratorHelper",
    "allowArrayLike",
    "it",
    "isArray",
    "F",
    "s",
    "done",
    "value",
    "e",
    "f",
    "TypeError",
    "normalCompletion",
    "didErr",
    "err",
    "step",
    "next",
    "return",
    "key",
    "defineProperty",
    "enumerable",
    "configurable",
    "writable",
    "ownKeys",
    "object",
    "enumerableOnly",
    "keys",
    "getOwnPropertySymbols",
    "symbols",
    "filter",
    "sym",
    "getOwnPropertyDescriptor",
    "push",
    "apply",
    "_objectSpread2",
    "target",
    "arguments",
    "source",
    "forEach",
    "getOwnPropertyDescriptors",
    "defineProperties",
    "excluded",
    "sourceKeys",
    "indexOf",
    "objectWithoutPropertiesLoose",
    "sourceSymbolKeys",
    "propertyIsEnumerable",
    "isComposite",
    "isPrimitive",
    "findPreviousComparison",
    "comparison",
    "predicate",
    "createPreviousIterator",
    "current",
    "previous",
    "getPrevious",
    "getLastChild",
    "children",
    "getDeepestChild",
    "deepest",
    "lastChild",
    "getPreviousSibling",
    "parent",
    "index",
    "previousSibling",
    "deepestChild",
    "isRegExp",
    "somePrototypeMatch",
    "isError",
    "isSet",
    "isMap",
    "getPrototypeOf",
    "compare",
    "actual",
    "expected",
    "anyOrder",
    "createComparison",
    "type",
    "failed",
    "defaultComparer",
    "expectationSymbol",
    "for",
    "createExpectation",
    "data",
    "createNotExpectation",
    "comparer",
    "isNegativeZero",
    "createAnyExpectation",
    "expectedConstructor",
    "rest",
    "options",
    "subcompare",
    "compareIdentity",
    "expectedReference",
    "referenceComparisonCandidate",
    "actualReference",
    "comparePrototype",
    "compareIntegrity",
    "compareExtensibility",
    "comparePropertiesDescriptors",
    "compareProperties",
    "compareSymbolsDescriptors",
    "compareSymbols",
    "Set",
    "compareSetEntries",
    "Map",
    "compareMapEntries",
    "valueOf",
    "compareValueOfReturnValue",
    "compareToStringReturnValue",
    "subcomparison",
    "Infinity",
    "isExtensible",
    "getIntegriy",
    "isFrozen",
    "isSealed",
    "expectedPropertyNames",
    "getOwnPropertyNames",
    "actualPropertyNames",
    "actualMissing",
    "actualExtra",
    "expectedMissing",
    "expectedExtra",
    "missing",
    "extra",
    "expectedKeys",
    "actualKeys",
    "every",
    "expectedSymbols",
    "actualSymbols",
    "symbol",
    "expectedPropertyName",
    "comparePropertyDescriptor",
    "expectedSymbol",
    "property",
    "owner",
    "expectedDescriptor",
    "actualDescriptor",
    "configurableComparison",
    "enumerableComparison",
    "writableComparison",
    "isErrorPropertyIgnored",
    "isRegExpPropertyIgnored",
    "isFunctionPropertyIgnored",
    "getComparison",
    "get",
    "setComparison",
    "set",
    "valueComparison",
    "propertyToArrayIndex",
    "RegExpIgnoredProperties",
    "includes",
    "functionIgnoredProperties",
    "errorIgnoredProperties",
    "propertyAsNumber",
    "parseInt",
    "Number",
    "isInteger",
    "expectedEntries",
    "values",
    "map",
    "actualEntries",
    "actualEntry",
    "expectedEntry",
    "entryComparison",
    "actualSize",
    "size",
    "expectedSize",
    "sizeComparison",
    "entryMapping",
    "expectedEntryCandidates",
    "find",
    "expectedEntryCandidate",
    "mappingComparison",
    "splice",
    "actualEntryMapping",
    "mapping",
    "mapEntryComparison",
    "mappingWithoutExpectedEntry",
    "undefined",
    "unexpectedEntry",
    "unexpectedEntryComparison",
    "expectedEntryWithoutActualEntry",
    "missingEntry",
    "missingEntryComparison",
    "valueToType",
    "primitiveType",
    "valueToPrimitiveType",
    "compositeType",
    "valueToCompositeType",
    "toStringResult",
    "tagName",
    "objectConstructorName",
    "inspectBoolean",
    "inspectNull",
    "_iterableToArrayLimit",
    "_i",
    "_arr",
    "_n",
    "_d",
    "_s",
    "_e",
    "arrayWithHoles",
    "iterableToArrayLimit",
    "nonIterableRest",
    "inspectNumber",
    "numericSeparator",
    "numberString",
    "String",
    "match",
    "groups",
    "number",
    "mark",
    "sign",
    "power",
    "numberWithSeparators",
    "formatNumber",
    "powerWithSeparators",
    "addSeparator",
    "minimumDigits",
    "groupLength",
    "parts",
    "split",
    "integer",
    "fractional",
    "integerWithSeparators",
    "fractionalWithSeparators",
    "addSeparatorFromLeft",
    "groupDigits",
    "digits",
    "digitCount",
    "digitsWithSeparator",
    "remainingDigits",
    "group",
    "start",
    "end",
    "Math",
    "min",
    "join",
    "inspectString",
    "preferSingleQuote",
    "escapeString",
    "str",
    "escapeSingleQuote",
    "result",
    "last",
    "lastIndex",
    "point",
    "charCodeAt",
    "replacement",
    "meta",
    "quote",
    "string",
    "inspectSymbol",
    "nestedInspect",
    "parenthesis",
    "symbolDescription",
    "symbolToDescription",
    "symbolDescriptionSource",
    "symbolSource",
    "description",
    "openingParenthesisIndex",
    "closingParenthesisIndex",
    "inspectUndefined",
    "inspectBigInt",
    "primitiveMap",
    "boolean",
    "null",
    "bigint",
    "preNewLineAndIndentation",
    "depth",
    "indentUsingTab",
    "indentSize",
    "newLineAndIndent",
    "count",
    "useTabs",
    "postNewLineAndIndentation",
    "repeat",
    "wrapNewLineAndIndentation",
    "inspectConstructor",
    "useNew",
    "formattedString",
    "inspectArray",
    "seen",
    "valuesSource",
    "j",
    "valueSource",
    "hasOwnProperty",
    "arraySource",
    "inspectBigIntObject",
    "bigIntSource",
    "inspectBooleanObject",
    "booleanSource",
    "inspectError",
    "error",
    "messageSource",
    "message",
    "errorSource",
    "errorToConstructorName",
    "derivedErrorNameArray",
    "inspectDate",
    "dateSource",
    "inspectFunction",
    "showFunctionBody",
    "functionSource",
    "isArrowFunction",
    "head",
    "inspectNumberObject",
    "numberSource",
    "inspectObject",
    "objectConstructor",
    "propertySourceArray",
    "propertyName",
    "propertyNameAsNumber",
    "propertyNameSource",
    "nameOrSymbolSource",
    "propertiesSource",
    "objectSource",
    "inspectRegExp",
    "inspectStringObject",
    "stringSource",
    "compositeMap",
    "BigInt",
    "Boolean",
    "Error",
    "Date",
    "Function",
    "RegExp",
    "inspect",
    "scopedInspect",
    "scopedValue",
    "scopedOptions",
    "nestedValue",
    "nestedOptions",
    "symbolToWellKnownSymbol",
    "wellKnownSymbolName",
    "propertyToAccessorString",
    "keyFor",
    "propertyNameToDotNotationAllowed",
    "dotNotationAllowedForProperty",
    "comparisonToPath",
    "comparisonPath",
    "ancestor",
    "unshift",
    "path",
    "reduce",
    "_iterableToArray",
    "iter",
    "arrayWithoutHoles",
    "iterableToArray",
    "nonIterableSpread",
    "valueToWellKnown",
    "compositeWellKnownPath",
    "valueToCompositeWellKnownPath",
    "compositeWellKnownMap",
    "WeakMap",
    "primitiveWellKnownMap",
    "addWellKnownComposite",
    "visitValue",
    "has",
    "visitProperty",
    "descriptor",
    "propertyValue",
    "global",
    "window",
    "valueToString",
    "anyComparisonToErrorMessage",
    "actualValue",
    "createAnyMessage",
    "defaultComparisonToErrorMessage",
    "expectedValue",
    "createUnequalValuesMessage",
    "referenceComparisonToErrorMessage",
    "isMissing",
    "isExtra",
    "createUnexpectedReferenceMessage",
    "unexpectedReferencePath",
    "createMissingReferenceMessage",
    "expectedReferencePath",
    "createUnequalRefencesMessage",
    "actualReferencePath",
    "comparisonToRootComparison",
    "findSelfOrAncestorComparison",
    "foundComparison",
    "prototypeComparisonToErrorMessage",
    "prototypeComparison",
    "rootComparison",
    "prototypeToString",
    "wellKnown",
    "expectedPrototype",
    "actualPrototype",
    "createUnequalPrototypesMessage",
    "createDetailedMessage",
    "details",
    "propertiesComparisonToErrorMessage",
    "missingCount",
    "extraCount",
    "unexpectedProperties",
    "missingProperties",
    "propertiesOrderComparisonToErrorMessage",
    "createUnexpectedPropertiesOrderMessage",
    "expectedPropertiesOrder",
    "propertyNameArrayToString",
    "actualPropertiesOrder",
    "propertyNameArray",
    "symbolsComparisonToErrorMessage",
    "hasExtra",
    "hasMissing",
    "createUnexpectedSymbolsMessage",
    "unexpectedSymbols",
    "symbolArrayToString",
    "createMissingSymbolsMessage",
    "missingSymbols",
    "createUnexpectedAndMissingSymbolsMessage",
    "symbolArray",
    "symbolsOrderComparisonToErrorMessage",
    "createUnexpectedSymbolsOrderMessage",
    "expectedSymbolsOrder",
    "actualSymbolsOrder",
    "setSizeComparisonToMessage",
    "createBiggerThanExpectedMessage",
    "createSmallerThanExpectedMessage",
    "mapEntryComparisonToErrorMessage",
    "isUnexpected",
    "createUnexpectedMapEntryErrorMessage",
    "createMissingMapEntryErrorMessage",
    "notComparisonToErrorMessage",
    "createNotMessage",
    "arrayLengthComparisonToMessage",
    "parentComparison",
    "grandParentComparison",
    "actualArray",
    "expectedArray",
    "actualLength",
    "expectedLength",
    "missingValues",
    "extraValues",
    "comparisonToErrorMessage",
    "failedComparison",
    "deepestComparison",
    "firstFunctionReturningSomething",
    "fns",
    "args",
    "fn",
    "returnValue",
    "isAssertionError",
    "createAssertionError",
    "assert",
    "firstArg",
    "_assert",
    "not",
    "any",
    "Constructor",
    "expectation",
    "captureStackTrace"
  ],
  "mappings": "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"
}